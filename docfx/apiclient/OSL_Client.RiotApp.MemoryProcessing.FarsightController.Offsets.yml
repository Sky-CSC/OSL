### YamlMime:ManagedReference
items:
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  commentId: T:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  id: FarsightController.Offsets
  parent: OSL_Client.RiotApp.MemoryProcessing
  children:
  - OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.Manager
  - OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapCount
  - OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeNetId
  - OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeObject
  - OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapRoot
  langs:
  - csharp
  - vb
  name: FarsightController.Offsets
  nameWithType: FarsightController.Offsets
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  type: Class
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: Offsets
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 182
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: public class Offsets
    content.vb: Public Class Offsets
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.Manager
  commentId: F:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.Manager
  id: Manager
  parent: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: FarsightController.Offsets.Manager
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.Manager
  type: Field
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: Manager
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 185
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: >-
      [JsonConverter(typeof(HexStringJsonConverter))]

      public int Manager
    return:
      type: System.Int32
    content.vb: >-
      <JsonConverter(GetType(HexStringJsonConverter))>

      Public Manager As Integer
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: OSL_Client.RiotApp.MemoryProcessing.Common.Utils.HexStringJsonConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapCount
  commentId: F:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapCount
  id: MapCount
  parent: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  langs:
  - csharp
  - vb
  name: MapCount
  nameWithType: FarsightController.Offsets.MapCount
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapCount
  type: Field
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: MapCount
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 188
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: >-
      [JsonConverter(typeof(HexStringJsonConverter))]

      public int MapCount
    return:
      type: System.Int32
    content.vb: >-
      <JsonConverter(GetType(HexStringJsonConverter))>

      Public MapCount As Integer
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: OSL_Client.RiotApp.MemoryProcessing.Common.Utils.HexStringJsonConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapRoot
  commentId: F:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapRoot
  id: MapRoot
  parent: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  langs:
  - csharp
  - vb
  name: MapRoot
  nameWithType: FarsightController.Offsets.MapRoot
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapRoot
  type: Field
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: MapRoot
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 191
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: >-
      [JsonConverter(typeof(HexStringJsonConverter))]

      public int MapRoot
    return:
      type: System.Int32
    content.vb: >-
      <JsonConverter(GetType(HexStringJsonConverter))>

      Public MapRoot As Integer
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: OSL_Client.RiotApp.MemoryProcessing.Common.Utils.HexStringJsonConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeNetId
  commentId: F:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeNetId
  id: MapNodeNetId
  parent: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  langs:
  - csharp
  - vb
  name: MapNodeNetId
  nameWithType: FarsightController.Offsets.MapNodeNetId
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeNetId
  type: Field
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: MapNodeNetId
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 194
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: >-
      [JsonConverter(typeof(HexStringJsonConverter))]

      public int MapNodeNetId
    return:
      type: System.Int32
    content.vb: >-
      <JsonConverter(GetType(HexStringJsonConverter))>

      Public MapNodeNetId As Integer
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: OSL_Client.RiotApp.MemoryProcessing.Common.Utils.HexStringJsonConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeObject
  commentId: F:OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeObject
  id: MapNodeObject
  parent: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets
  langs:
  - csharp
  - vb
  name: MapNodeObject
  nameWithType: FarsightController.Offsets.MapNodeObject
  fullName: OSL_Client.RiotApp.MemoryProcessing.FarsightController.Offsets.MapNodeObject
  type: Field
  source:
    remote:
      path: OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
      branch: InGame
      repo: https://github.com/Sky-CSC/OSL.git
    id: MapNodeObject
    path: ../OSL-Client/RiotApp/MemoryProcessing/FarsightController.cs
    startLine: 197
  assemblies:
  - OSL-Client
  namespace: OSL_Client.RiotApp.MemoryProcessing
  syntax:
    content: >-
      [JsonConverter(typeof(HexStringJsonConverter))]

      public int MapNodeObject
    return:
      type: System.Int32
    content.vb: >-
      <JsonConverter(GetType(HexStringJsonConverter))>

      Public MapNodeObject As Integer
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: OSL_Client.RiotApp.MemoryProcessing.Common.Utils.HexStringJsonConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OSL_Client.RiotApp.MemoryProcessing
  commentId: N:OSL_Client.RiotApp.MemoryProcessing
  name: OSL_Client.RiotApp.MemoryProcessing
  nameWithType: OSL_Client.RiotApp.MemoryProcessing
  fullName: OSL_Client.RiotApp.MemoryProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
