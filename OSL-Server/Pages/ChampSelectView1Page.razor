@page "/champselectoverlay1"
@using OSL_Server.DataReciveClient.Processing.ChampSelect;
@using System.Timers
@using static OSL_Server.Pages.ChampSelectView1Page.ChampSelect
@layout EmptyLayout

<PageTitle>Champ Select Overlay 1</PageTitle>
<div class="display-champ-select" style="background: url(@OverlayBackground)">

    <div class="overlay-type-1">
        <div class="champ-select-header">
            <div class="chamSelect-header-blue-info">
                @*Texte*@
                @*Logo*@
                @*Win/Loose*@
                <h1 style="color: @ColorBlueTeamName">Sky-csc @BlueTeamName</h1>
			    <h5 style="color: @ColorBlueTeamSubtext">Never losing @BlueTeamSubtext</h5>
            </div>
            <div class="chamSelect-header-blue-logo" style="visibility: @PictureExist(BlueLogo)">
                <img class="chamSelect-header-blue-logo" src="@BlueLogo" />
            </div>
            <div class="chamSelect-header-blue-timer">
                @{
                    if (SideInProgress() == 1)
                    {
                        int timer = 0;
                        timer = timePhase - currentCount / 2;
                        if (timer <= 0)
                        {
                            timer = 0;
                        }
                        if (timer <= 9)
                        {
                                <div class="timer timer-blue">
                                    <div class="timer-bg" style="background: @ColorBlueSideTimerBackgroud; border: @ColorBlueSideTimerBorder">
                                        <div class="timer-inner" id="timer-blue" style="left: 50px; color: @ColorBlueSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                        else
                        {
                                <div class="timer timer-blue">
                                    <div class="timer-bg" style="background: @ColorBlueSideTimerBackgroud; border: @ColorBlueSideTimerBorder">
                                        <div class="timer-inner" id="timer-blue" style="color: @ColorBlueSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                    }
                    else if (SideInProgress() == 0)
                    {
                        int timer = 0;
                        timer = timePhase - currentCount / 2;
                        if (timer <= 0)
                        {
                            timer = 0;
                        }
                        if (timer <= 9)
                        {
                                <div class="timer timer-blue">
                                    <div class="timer-bg" style="background: @ColorBlueSideTimerBackgroud; border: @ColorBlueSideTimerBorder">
                                        <div class="timer-inner" id="timer-blue" style="left: 50px; color: @ColorBlueSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                        else
                        {
                                <div class="timer timer-blue">
                                    <div class="timer-bg" style="background: @ColorBlueSideTimerBackgroud; border: @ColorBlueSideTimerBorder">
                                        <div class="timer-inner" id="timer-blue" style="color: @ColorBlueSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                    }
                }
            </div>
            <div className="chamSelect-header-keystone">
                @{
                    if (SideInProgress() == 1)
                    {
                        //27
                        //Afficher BAN_PICK et la phase de pick ou de ban en cours
                    }
                    else if (SideInProgress() == 2)
                    {
                        //27
                        //Afficher BAN_PICK et la phase de pick ou de ban en cours
                    }
                    else if (SideInProgress() == 0)
                    {

                        //59sec
                        //Afficher finalization
                    }
                }
                @*Texte*@
                @*Logo*@
                @*Nom Tournoi*@
            </div>
            <div class="chamSelect-header-red-timer">
                @{
                    if (SideInProgress() == 2)
                    {
                        int timer = 0;
                        timer = timePhase - currentCount / 2;
                        if (timer <= 0)
                        {
                            timer = 0;
                        }
                        if (timer <= 9)
                        {
                                <div class="timer timer-red">
                                    <div class="timer-bg" style="background: @ColorRedSideTimerBackgroud; border: @ColorRedSideTimerBorder">
                                        <div class="timer-inner" id="timer-red" style="left: 50px; color: @ColorRedSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                        else
                        {
                                <div class="timer timer-red">
                                    <div class="timer-bg" style="background: @ColorRedSideTimerBackgroud; border: @ColorRedSideTimerBorder">
                                        <div class="timer-inner" id="timer-red" style="color: @ColorRedSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                    }
                    else if (SideInProgress() == 0)
                    {
                        int timer = 0;
                        timer = timePhase - currentCount / 2;
                        if (timer <= 0)
                        {
                            timer = 0;
                        }
                        if (timer <= 9)
                        {
                                <div class="timer timer-red">
                                    <div class="timer-bg" style="background: @ColorRedSideTimerBackgroud; border: @ColorRedSideTimerBorder">
                                        <div class="timer-inner" id="timer-red" style="left: 50px; color: @ColorRedSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                        else
                        {
                                <div class="timer timer-red">
                                    <div class="timer-bg" style="background: @ColorRedSideTimerBackgroud; border: @ColorRedSideTimerBorder">
                                        <div class="timer-inner" id="timer-red" style="color: @ColorRedSideTimerTexte">@timer</div>
                                    </div>
                                </div>
                        }
                    }
                }
            </div>
             <div class="chamSelect-header-red-logo" style="visibility: @PictureExist(RedLogo)">
                 <img class="chamSelect-header-red-logo" src="@RedLogo" />
            </div>
            <div class="chamSelect-header-red-info">
                @*Texte*@
                @*Logo*@
                @*Win/Loose*@
                <h1 style="color: @ColorRedTeamName">Skynet @RedTeamName</h1>
			    <h5 style="color: @ColorRedTeamSubtext">Cyberdine System Comporation @RedTeamSubtext</h5>
            </div>
        </div>

        @*Middle*@
        <div class="champ-select-center">
            @*Blue side display informations*@
            <div class="side" id="blueSide">
                @*- Si ban en cours
                - faire clinioter
                - texte banning

                - Si pick en cours
                - faire clinioter
                - champ en sélection
                - texte picking

                - Pick effectué
                - Subrilliance 1-2sec (pick fini et suivant en cours n+1)
                *@
                @{
                    for (int indexChamp = 0; indexChamp < @ChampSelectInfo.session.MyTeam.Count(); indexChamp++)
                    {
                            <div class="champ-wrapper">
                                <div class="base-color-background" style="background: @ColorBlueSideBackgroud; border: @ColorBlueSideBorder"></div>
                                <div class="gradient-background-overlay"></div>
                                <div class="summoner-object-component">
                                    <div class="summoner-object-wrapper" style="color: @ColorBlueSideTexte;">
                                        @*Champion picture*@
                                        <div class="champ-picture" style="background-image: url(@getChampId(indexChamp, 1));"></div>
                                        @*Curent action*@
                                        <div class="action-text">@getCurentAction(indexChamp, 1)</div>
                                        @*SummonerName*@
                                        <div class="summoner-name">@getSummonerName(indexChamp, 1)</div>
                                        <div class="summoner-spells">
                                            @*Summoners Spells*@
                                            @{
                                            if (SideInProgress() == 0)
                                            {
                                                        <img class="spell" src="@getSpell(indexChamp, 1, 1)">
                                                        <img class="spell" src="@getSpell(indexChamp, 1, 2)">
                                            }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                    }
                }
            </div>
            <div class="champ-select-keystone">
            </div>

            @*Red side display informations*@
            <div class="side" id="redSide">
                @{
                    for (int indexChamp = 0; indexChamp < @ChampSelectInfo.session.TheirTeam.Count(); indexChamp++)
                    {
                            <div class="champ-wrapper">
                                <div class="base-color-background" style="background: @ColorRedSideBackgroud; border: @ColorRedSideBorder"></div>
                                <div class="gradient-background-overlay"></div>
                                <div class="summoner-object-component">
                                    <div class="summoner-object-wrapper" style="color: @ColorRedSideTexte">
                                        @*Champion picture*@
                                        <div class="champ-picture" style="background-image: url(@getChampId(indexChamp, 2));"></div>
                                        @*Curent action*@
                                        <div class="action-text">@getCurentAction(indexChamp, 2)</div>
                                        @*SummonerName*@
                                        <div class="summoner-name">@getSummonerName(indexChamp, 2)</div>
                                        <div class="summoner-spells">
                                            @*Summoners Spells*@
                                            @{
                                            if (SideInProgress() == 0)
                                            {
                                                        <img class="spell" src="@getSpell(indexChamp, 2, 1)">
                                                        <img class="spell" src="@getSpell(indexChamp, 2, 2)">
                                            }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                    }
                }
            </div>
        </div>

        @*Footer*@
        <div class="champ-select-footer">
            @*Footer ban blue side*@
            <div class="bans" id="blueBans">
                @{
                    int i = 0;
                        @*Ban already completed*@
                    for (i = 0; i < ChampSelectInfo.session.Bans.MyTeamBans.Count(); i++)
                    {
                            <div class="ban-wrapper">
                                <img class="ban-wrapper ban-veil" src="@DefaultSquare(i, 1)" />
                                <img class="ban-icon" src="@BanOverlayPicture">
                            </div>
                    }

                        @*Ban in progress*@
                    foreach (var action in ChampSelectInfo.session.Actions)
                    {
                        foreach (var inaction in action)
                        {
                            if (inaction.Completed == false && inaction.Type.Equals("ban") && (inaction.PickTurn == 1 || inaction.PickTurn == 3 || inaction.PickTurn == 5 || inaction.PickTurn == 8 || inaction.PickTurn == 10))
                            {
                                    <div class="ban-wrapper ban-background" style="background-color: @BanBackgroundColor">
                                        <img class="ban-wrapper ban-blink" src="@BanBackgroundPicture" />
                                    </div>
                                i++;
                            }
                        }
                    }

                        @*Ban on hold*@
                    for (int j = i; j < 5; j++)
                    {
                            <div class="ban-wrapper">
                                <img class="ban-wrapper" src="@BanBackgroundPicture" />
                            </div>
                    }
                }
            </div>

            @*Footer keystone*@
            <div className="champ-select-footer-keystone">
                @*Texte*@
                @*Logo*@
                @*Pub ?*@
            </div>

            @*Footer ban red side*@
            <div class="bans" id="redBans">
                @{
                    int k = 0;
                        @*Ban already completed*@
                    for (k = 0; k < ChampSelectInfo.session.Bans.TheirTeamBans.Count(); k++)
                    {
                            <div class="ban-wrapper">
                                @*<img class="ban-wrapper ban-veil" src="../assets/12.12/fr_fr/Champions/@ChampSelectInfo.session.Bans.TheirTeamBans[k]/Skins/@champDefaultSkinNumber(k)/@champDefaultSkinNumber(k)_Tile.jpg" />*@
                                <img class="ban-wrapper ban-veil" src="@DefaultSquare(k, 2)" />
                                <img class="ban-icon" src="@BanOverlayPicture">
                            </div>
                    }

                        @*Ban in progress*@
                    foreach (var action in ChampSelectInfo.session.Actions)
                    {
                        foreach (var inaction in action)
                        {
                            if (inaction.Completed == false && inaction.Type.Equals("ban") && (inaction.PickTurn == 2 || inaction.PickTurn == 4 || inaction.PickTurn == 6 || inaction.PickTurn == 7 || inaction.PickTurn == 9))
                            {
                                    <div class="ban-wrapper">
                                        <div class="ban-background" style="margin-left: 4px; background-color: @BanBackgroundColor"></div>
                                        <img class="ban-wrapper ban-blink" src="@BanBackgroundPicture" />
                                    </div>
                                k++;
                            }
                        }
                    }

                        @*Ban on hold*@
                    for (int j = k; j < 5; j++)
                    {
                            <div class="ban-wrapper">
                                <img class="ban-wrapper" src="@BanBackgroundPicture" />
                            </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="Overlay-Type-2">
    </div>
</div>


@code {

    public static int currentCount = 0;
    public static int timePhase = 0;
    private System.Timers.Timer timer = new(1000);

    protected override void OnInitialized()
    {
        timer.Elapsed += (sender, eventArgs) => OnTimerCallback();
        timer.Start();
    }

    private void OnTimerCallback()
    {
        _ = InvokeAsync(() =>
        {
            currentCount++;
            StateHasChanged();
        });
    }

    public void Dispose() => timer.Dispose();
}