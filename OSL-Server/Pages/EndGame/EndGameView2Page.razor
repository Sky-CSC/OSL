@page "/endgame/view2"
@using OSL_Server.DataReciveClient.Processing.EndGame;
@layout EmptyLayout

<PageTitle>End Game View 2</PageTitle>

@{
    string tempsBackgroundColor;
    @if (EndGamePage.textValueOverlayView2.BackgroundColor)
    {
        tempsBackgroundColor = formatingData.BackgroundColor;
        //tempsBackgroundColor = "";
    }
    else
    {
        tempsBackgroundColor = "";
    }
}

<div class="endGameView2" style="background-image: @tempsBackgroundColor">

    <div class="content">
        @if (EndGameInfo.jsonContentEndOfMatch != null && EndGameInfo.jsonContentMatch != null && EndGameInfo.jsonContentTimeline != null)
        {
            string tempsTopBarGradiant;
            string tempsChampionInfoGradiant;
            string tempsBansGradiant;
            string tempsGlobalStatsGradiant;
            string tempsGoldDiffGradiant;

            @if (EndGamePage.textValueOverlayView2.TopBarGradiant)
            {
                tempsTopBarGradiant = formatingData.TopBarGradiant;
            }
            else
            {
                tempsTopBarGradiant = "";
            }
            @if (EndGamePage.textValueOverlayView2.ChampionInfoGradiant)
            {
                tempsChampionInfoGradiant = formatingData.ChampionInfoGradiant;
            }
            else
            {
                tempsChampionInfoGradiant = "";
            }
            @if (EndGamePage.textValueOverlayView2.BansGradiant)
            {
                tempsBansGradiant = formatingData.BansGradiant;
            }
            else
            {
                tempsBansGradiant = "";
            }
            @if (EndGamePage.textValueOverlayView2.GlobalStatsGradiant)
            {
                tempsGlobalStatsGradiant = formatingData.GlobalStatsGradiant;
            }
            else
            {
                tempsGlobalStatsGradiant = "";
            }
            @if (EndGamePage.textValueOverlayView2.GoldDiffGradiant)
            {
                tempsGoldDiffGradiant = formatingData.GoldDiffGradiant;
            }
            else
            {
                tempsGoldDiffGradiant = "";
            }


            <div class="top-bar" style="background-image: @formatingData.TopBarBackgroundColor">
                <div class="top-bar-gradiant" style="background-image: @tempsTopBarGradiant"></div>
                <div class="top-bar-border" style="border: @formatingData.TopBarBorderColor"></div>
                <div class="top-bar-blue-team">
                    <div class="top-bar-blue-team-name" style="color: @formatingData.TopBarBlueTeamNameColor">
                        @formatingData.TopBarBlueTeamName
                    </div>
                    <div class="top-bar-blue-team-winloss" style="color: @formatingData.TopBarBlueTeamWinLossColor">
                        @GetWinLossBlue()
                    </div>
                    <div class="top-bar-blue-team-score" style="color: @formatingData.TopBarBlueTeamScoreColor">
                        @formatingData.TopBarBlueTeamScore
                    </div>
                </div>
                <div class="top-bar-timer">
                    <div class="timer-text" style="color: @formatingData.TopBarTimerTextColor">
                        @formatingData.TopBarTimerText
                    </div>
                    <div class="top-bar-timer-timer" style="color: @formatingData.TopBarTimerColor">
                        @GetTimer()
                    </div>
                </div>
                <div class="top-bar-red-team">
                    <div class="top-bar-red-team-name" style="color: @formatingData.TopBarRedTeamNameColor">
                        @formatingData.TopBarRedTeamName
                    </div>
                    <div class="top-bar-red-team-winloss" style="color: @formatingData.TopBarRedTeamWinLossColor">
                        @GetWinLossRed()
                    </div>
                    <div class="top-bar-red-team-score" style="color: @formatingData.TopBarRedTeamScoreColor">
                        @formatingData.TopBarRedTeamScore
                    </div>
                </div>
            </div>
            <div class="champion-info" style="background-image: @formatingData.ChampionInfoBackgroundColor">
                <div class="champion-info-gradiant" style="background-image: @tempsChampionInfoGradiant"></div>
                <div class="champion-info-border" style="border: @formatingData.ChampionInfoBorderColor"></div>
                <div class="champion-info-stats">
                    <div class="champion-info-stats-text" style="color: @formatingData.ChampionInfoTextColor">
                        @formatingData.ChampionInfoText
                    </div>
                    <div class="champion-info-stats-blue">

                        @foreach (var players in EndGameInfo.jsonContentEndOfMatch.teams[0].players)
                        {
                            <div class="champion-info-stats-blue-group">
                                <div class="pick-wrapper">
                                    <img class="pick-picture" src="@GetChampionPathByPath(Convert.ToString(players.championSquarePortraitPath))" />
                                </div>
                                <div class="champion-info-stats-blue-group-info">
                                    <div class="champion-info-stats-blue-group-text" style="color: @formatingData.ChampionInfoBlueDegaTextColor">
                                        @ConvertToK(Convert.ToDouble(players.stats.TOTAL_DAMAGE_DEALT_TO_CHAMPIONS))
                                    </div>
                                    <div class="champion-info-stats-blue-group-bar" style="width: @ConvertToWidth(Convert.ToInt32(players.stats.TOTAL_DAMAGE_DEALT_TO_CHAMPIONS)); background-color: @formatingData.ChampionInfoBlueBarColor">
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="champion-info-stats-red">
                        @foreach (var players in EndGameInfo.jsonContentEndOfMatch.teams[1].players)
                        {
                            <div class="champion-info-stats-red-group">
                                <div class="pick-wrapper">
                                    <img class="pick-picture" src="@GetChampionPathByPath(Convert.ToString(players.championSquarePortraitPath))" />
                                </div>
                                <div class="champion-info-stats-red-group-info">
                                    <div class="champion-info-stats-red-group-text" style="color: @formatingData.ChampionInfoRedDegaTextColor">
                                        @ConvertToK(Convert.ToDouble(players.stats.TOTAL_DAMAGE_DEALT_TO_CHAMPIONS))
                                    </div>
                                    <div class="champion-info-stats-red-group-bar" style="width: @ConvertToWidth(Convert.ToInt32(players.stats.TOTAL_DAMAGE_DEALT_TO_CHAMPIONS)); background-color: @formatingData.ChampionInfoRedBarColor">
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="bans" style="background-image: @formatingData.BansBackgroundColor">
                <div class="bans-gradiant" style="background-image: @tempsBansGradiant"></div>
                <div class="bans-border" style="border: @formatingData.BansBorderColor"></div>
                <div class="bans-info">
                    <div class="bans-info-blue">
                        @foreach (var blueBans in EndGameInfo.jsonContentMatch.info.teams[0].bans)
                        {
                            <div class="bans-wrapper">
                                <img class="bans-picture" src="@GetChampionPath(Convert.ToString(blueBans.championId))" />
                            </div>
                        }
                    </div>
                    <div class="bans-info-text" style="color: @formatingData.BansTextColor">
                        BANS
                    </div>
                    <div class="bans-info-red">
                        @foreach (var blueBans in EndGameInfo.jsonContentMatch.info.teams[1].bans)
                        {
                            <div class="bans-wrapper">
                                <img class="bans-picture" src="@GetChampionPath(Convert.ToString(blueBans.championId))" />
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="global-stats" style="background-image: @formatingData.GlobalStatsBackgroundColor">
                <div class="global-stats-gradiant" style="background-image: @tempsGlobalStatsGradiant"></div>
                <div class="global-stats-border" style="border: @formatingData.GlobalStatsBorderColor"></div>
                <div class="global-stats-blue" style="color: @formatingData.GlobalStatsBlueTextColor">
                    <div class="global-stats-blue-info">
                        @GetKDABlue()
                    </div>
                    <div class="global-stats-blue-info">
                        @GetGoldBlue()
                    </div>
                    <div class="global-stats-blue-info">
                        @GetTowerKillBlue()
                    </div>
                    <div class="global-stats-blue-info dragon-info">
                        <div class="dragon-wrapper">
                            @foreach (var frames in EndGameInfo.jsonContentTimeline.info.frames)
                            {
                                @foreach (var events in frames.events)
                                {
                                    string monsterSubType = events.monsterSubType;
                                    if (monsterSubType != null)
                                    {
                                        int killerTeamId = events.killerTeamId;
                                        if (killerTeamId == 100)
                                        {
                                            <div class="dragon-wrapper">
                                                <img class="dragon-picture" src="@GetDragonsKill(monsterSubType)" />
                                            </div>
                                        }
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="global-stats-blue-info">
                        @GetElderKillBlue()
                    </div>
                    <div class="global-stats-blue-info">
                        @GetHeraldKillBlue()
                    </div>
                    <div class="global-stats-blue-info">
                        @GetBaronKillBlue()
                    </div>
                </div>
                <div class="global-stats-center" style="color: @formatingData.GlobalStatsTextColor">
                    <div class="global-stats-center-info">
                        K/D/A
                    </div>
                    <div class="global-stats-center-info">
                        Gold
                    </div>
                    <div class="global-stats-center-info">
                        Towers
                    </div>
                    <div class="global-stats-center-info">
                        Dragons
                    </div>
                    <div class="global-stats-center-info">
                        Elder dragons
                    </div>
                    <div class="global-stats-center-info">
                        Heralds
                    </div>
                    <div class="global-stats-center-info">
                        Barons
                    </div>
                </div>
                <div class="global-stats-red" style="color: @formatingData.GlobalStatsRedTextColor">
                    <div class="global-stats-red-info">
                        @GetKDARed()
                    </div>
                    <div class="global-stats-red-info">
                        @GetGoldRed()
                    </div>
                    <div class="global-stats-red-info">
                        @GetTowerKillRed()
                    </div>
                    <div class="global-stats-red-info">
                        <div class="dragon-wrapper">
                            @foreach (var frames in EndGameInfo.jsonContentTimeline.info.frames)
                            {
                                @foreach (var events in frames.events)
                                {
                                    string monsterSubType = events.monsterSubType;
                                    if (monsterSubType != null)
                                    {
                                        int killerTeamId = events.killerTeamId;
                                        if (killerTeamId == 200)
                                        {
                                            <div class="dragon-wrapper">
                                                <img class="dragon-picture" src="@GetDragonsKill(monsterSubType)" />
                                            </div>
                                        }
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="global-stats-red-info">
                        @GetElderKillRed()
                    </div>
                    <div class="global-stats-red-info">
                        @GetHeraldKillRed()
                    </div>
                    <div class="global-stats-red-info">
                        @GetBaronKillRed()
                    </div>
                </div>
            </div>
            <div class="gold-diff" style="background-image: @formatingData.GoldDiffBackgroundColor">
                <div class="gold-diff-gradiant" style="background-image: @tempsGoldDiffGradiant"></div>
                <div class="gold-diff-border" style="border: @formatingData.GoldDiffBorderColor"></div>
                <div class="gold-diff-text" style="color: @formatingData.GoldDiffTextColor">
                    @formatingData.GoldDiffText
                </div>
            </div>
        }
        else
        {
            <div class="alert-danger" style="border-radius: 10px;">
                <h3 style="padding: 5px;"><strong>Info!</strong> Not end game information found</h3>
            </div>
        }
    </div>

</div>


@code {
    private System.Timers.Timer timer = new(5000);

    protected override void OnInitialized()
    {
        timer.Elapsed += (sender, eventArgs) => OnTimerCallback();
        timer.Start();
    }

    private void OnTimerCallback()
    {
        _ = InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose() => timer.Dispose();
}
