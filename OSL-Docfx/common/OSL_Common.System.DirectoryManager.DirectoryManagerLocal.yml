### YamlMime:ManagedReference
items:
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  commentId: T:OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  id: DirectoryManagerLocal
  parent: OSL_Common.System.DirectoryManager
  children:
  - OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory(System.String)
  - OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch(System.String)
  - OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory(System.String)
  - OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory(System.String)
  langs:
  - csharp
  - vb
  name: DirectoryManagerLocal
  nameWithType: DirectoryManagerLocal
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  type: Class
  source:
    remote:
      path: OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
      branch: GameInformation
      repo: https://github.com/Sky-CSC/OSL.git
    id: DirectoryManagerLocal
    path: ../OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
    startLine: 7
  assemblies:
  - OSL-Common
  namespace: OSL_Common.System.DirectoryManager
  summary: "\nGestion of local directory\n"
  example: []
  syntax:
    content: public class DirectoryManagerLocal
    content.vb: Public Class DirectoryManagerLocal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory(System.String)
  commentId: M:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  nameWithType: DirectoryManagerLocal.CreateDirectory(String)
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
      branch: GameInformation
      repo: https://github.com/Sky-CSC/OSL.git
    id: CreateDirectory
    path: ../OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
    startLine: 14
  assemblies:
  - OSL-Common
  namespace: OSL_Common.System.DirectoryManager
  summary: "\nCreates a new directory in the local file system\n"
  example: []
  syntax:
    content: public static void CreateDirectory(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: ''
    content.vb: Public Shared Sub CreateDirectory(directoryPath As String)
  overload: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory(System.String)
  commentId: M:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  langs:
  - csharp
  - vb
  name: DeleteDirectory(String)
  nameWithType: DirectoryManagerLocal.DeleteDirectory(String)
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory(System.String)
  type: Method
  source:
    remote:
      path: OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
      branch: GameInformation
      repo: https://github.com/Sky-CSC/OSL.git
    id: DeleteDirectory
    path: ../OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
    startLine: 38
  assemblies:
  - OSL-Common
  namespace: OSL_Common.System.DirectoryManager
  summary: "\nDeletes a directory in the local file system\n"
  example: []
  syntax:
    content: public static void DeleteDirectory(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: ''
    content.vb: Public Shared Sub DeleteDirectory(directoryPath As String)
  overload: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory(System.String)
  commentId: M:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory(System.String)
  id: CheckDirectory(System.String)
  parent: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  langs:
  - csharp
  - vb
  name: CheckDirectory(String)
  nameWithType: DirectoryManagerLocal.CheckDirectory(String)
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory(System.String)
  type: Method
  source:
    remote:
      path: OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
      branch: GameInformation
      repo: https://github.com/Sky-CSC/OSL.git
    id: CheckDirectory
    path: ../OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
    startLine: 59
  assemblies:
  - OSL-Common
  namespace: OSL_Common.System.DirectoryManager
  summary: "\nCheck Directory\n"
  example: []
  syntax:
    content: public static DirectoryInfo CheckDirectory(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: ''
    return:
      type: DirectoryInfo
      description: ''
    content.vb: Public Shared Function CheckDirectory(directoryPath As String) As DirectoryInfo
  overload: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch(System.String)
  commentId: M:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch(System.String)
  id: CheckExistingDirectoryPatch(System.String)
  parent: OSL_Common.System.DirectoryManager.DirectoryManagerLocal
  langs:
  - csharp
  - vb
  name: CheckExistingDirectoryPatch(String)
  nameWithType: DirectoryManagerLocal.CheckExistingDirectoryPatch(String)
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch(System.String)
  type: Method
  source:
    remote:
      path: OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
      branch: GameInformation
      repo: https://github.com/Sky-CSC/OSL.git
    id: CheckExistingDirectoryPatch
    path: ../OSL-Common/System/DirectoryManager/DirectoryManagerLocal.cs
    startLine: 70
  assemblies:
  - OSL-Common
  namespace: OSL_Common.System.DirectoryManager
  summary: "\nCheck Existing Directory Patch\n"
  example: []
  syntax:
    content: public static string CheckExistingDirectoryPatch(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CheckExistingDirectoryPatch(directoryPath As String) As String
  overload: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: OSL_Common.System.DirectoryManager
  commentId: N:OSL_Common.System.DirectoryManager
  name: OSL_Common.System.DirectoryManager
  nameWithType: OSL_Common.System.DirectoryManager
  fullName: OSL_Common.System.DirectoryManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory*
  commentId: Overload:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory
  name: CreateDirectory
  nameWithType: DirectoryManagerLocal.CreateDirectory
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CreateDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory*
  commentId: Overload:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory
  name: DeleteDirectory
  nameWithType: DirectoryManagerLocal.DeleteDirectory
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.DeleteDirectory
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory*
  commentId: Overload:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory
  name: CheckDirectory
  nameWithType: DirectoryManagerLocal.CheckDirectory
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckDirectory
- uid: DirectoryInfo
  commentId: '!:DirectoryInfo'
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: DirectoryInfo
- uid: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch*
  commentId: Overload:OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch
  name: CheckExistingDirectoryPatch
  nameWithType: DirectoryManagerLocal.CheckExistingDirectoryPatch
  fullName: OSL_Common.System.DirectoryManager.DirectoryManagerLocal.CheckExistingDirectoryPatch
